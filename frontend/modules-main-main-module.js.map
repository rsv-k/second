{"version":3,"sources":["./src/app/core/guards/active-order.guard.ts","./src/app/core/services/webmoney.service.ts","./src/app/modules/main/components/footer/footer.component.ts","./src/app/modules/main/components/footer/footer.component.html","./src/app/modules/main/components/header/header.component.ts","./src/app/modules/main/components/header/header.component.html","./src/app/modules/main/components/main/main.component.ts","./src/app/modules/main/components/main/main.component.html","./src/app/modules/main/components/moneyback-policy/moneyback-policy.component.ts","./src/app/modules/main/components/moneyback-policy/moneyback-policy.component.html","./src/app/modules/main/components/nav/nav.component.ts","./src/app/modules/main/components/nav/nav.component.html","./src/app/modules/main/components/section-about/section-about.component.ts","./src/app/modules/main/components/section-about/section-about.component.html","./src/app/modules/main/components/section-rules/section-rules.component.ts","./src/app/modules/main/components/section-rules/section-rules.component.html","./src/app/modules/main/components/section-tariffs/section-tariffs.component.ts","./src/app/modules/main/components/section-tariffs/section-tariffs.component.html","./src/app/modules/main/components/section-third-message/section-third-message.component.ts","./src/app/modules/main/components/section-third-message/section-third-message.component.html","./src/app/modules/main/components/section-trade-first/section-trade-first.component.ts","./src/app/modules/main/components/section-trade-first/section-trade-first.component.html","./src/app/modules/main/components/section-trade-progress/section-trade-progress.component.ts","./src/app/modules/main/components/section-trade-progress/section-trade-progress.component.html","./src/app/modules/main/components/section-trade-second/section-trade-second.component.ts","./src/app/modules/main/components/section-trade-second/section-trade-second.component.html","./src/app/modules/main/components/section-trade-third/section-trade-third.component.ts","./src/app/modules/main/components/section-trade-third/section-trade-third.component.html","./src/app/modules/main/components/section-trade/section-trade.component.ts","./src/app/modules/main/components/section-trade/section-trade.component.html","./src/app/modules/main/main-routing.module.ts","./src/app/modules/main/main.module.ts"],"names":[],"mappings":"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","file":"modules-main-main-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { OrderService } from '@core/services/order.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n   providedIn: 'root',\r\n})\r\nexport class ActiveOrderGuard implements CanActivate {\r\n   constructor(private orderService: OrderService, private router: Router) {}\r\n\r\n   canActivate(next: ActivatedRouteSnapshot): Observable<boolean> {\r\n      return this.orderService.isActiveOrder(next.params.id).pipe(\r\n         catchError((error) => {\r\n            this.router.navigate(['/']);\r\n            return of(false);\r\n         })\r\n      );\r\n   }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { pluck } from 'rxjs/operators';\r\nimport { Order } from '../models/order.model';\r\n\r\n@Injectable({\r\n   providedIn: 'root',\r\n})\r\nexport class WebmoneyService {\r\n   constructor(private http: HttpClient) {}\r\n\r\n   check(order: Order): Observable<boolean> {\r\n      return this.http\r\n         .post<{ result: boolean }>('/api/v1/serviceValidators/webmoney', order)\r\n         .pipe(pluck('result'));\r\n   }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n   selector: 'app-footer',\r\n   templateUrl: './footer.component.html',\r\n   styleUrls: ['./footer.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.Default,\r\n})\r\nexport class FooterComponent implements OnInit {\r\n   constructor() {}\r\n\r\n   ngOnInit(): void {}\r\n}\r\n","<footer>\r\n   <p class=\"paragraph\">\r\n      У вас возникла острая необходимость обменять WebMoney на Яндекс.Деньги? А\r\n      может быть, вы хотите перевести WebMoney другому пользователю системы? Или\r\n      ищите обменный пункт webmoney для вывода средств на банковскую карту? Мы\r\n      знаем, как вам помочь! Просто наберите в любой поисковой системе один из\r\n      следующих запросов: «обмен интернет валют», «обмен интернет денег»,\r\n      «обменник онлайн», «exchange WebMoney», «wm обменник» или «обменять wm».\r\n      Поиск тут же приведет вас на страницу, где собраны ссылки на самые\r\n      популярные электронные обменники (обменники WebMoney, Яндекс Деньги,\r\n      RBKMoney и др.), среди которых на одной из первых позиций будет\r\n      Netexchange.ru, который и производит необходимый Вам обмен электронных\r\n      валют.\r\n   </p>\r\n\r\n   <p class=\"paragraph\">\r\n      С развитием систем интернет-торговли появилась острая необходимость в\r\n      универсальных способах расчетов в сети. Так в сети одна за другой стали\r\n      создаваться электронные платежные системы. А вместе с их появлением\r\n      пользователям понадобились обменники электронных валют, где можно без\r\n      проблем обменять электронные деньги различных платежных систем,\r\n      осуществить перевод wm, обмен webmoney, вывести Яндекс.Деньги или купить\r\n      webmoney с минимальными затратами по выгодным курсам.\r\n   </p>\r\n\r\n   <p class=\"paragraph\">\r\n      Обмен электронных денег процедура достаточно простая, особенно если ее\r\n      оказывает профессиональный обменный сервис. Обмен электронных денег в\r\n      Netexchange это еще и выгодно, т.к. происходит по одним из самых низких\r\n      курсов!\r\n   </p>\r\n</footer>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n   selector: 'app-header',\r\n   templateUrl: './header.component.html',\r\n   styleUrls: ['./header.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n   constructor() {}\r\n\r\n   ngOnInit(): void {}\r\n}\r\n","<header class=\"header\">\r\n   <h1 class=\"header__siteName\">exwm</h1>\r\n   <p class=\"header__text\">\r\n      <span class=\"header__span-text\"\r\n         >Автоматический обмен электронных валют 24/7</span\r\n      >\r\n      <mat-divider></mat-divider>\r\n   </p>\r\n   <p class=\"header__language\">Ru</p>\r\n\r\n   <button mat-raised-button class=\"header__button\">\r\n      <mat-icon class=\"header__icon\">login</mat-icon>\r\n      <span class=\"header__button-text\">Вход для клиентов и партнеров</span>\r\n   </button>\r\n</header>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<header class=\"header\">\r\n   <app-header></app-header>\r\n</header>\r\n<main class=\"main\">\r\n   <router-outlet></router-outlet>\r\n   <app-nav></app-nav>\r\n</main>\r\n<footer class=\"footer\">\r\n   <app-footer></app-footer>\r\n</footer>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n   selector: 'app-moneyback-policy',\r\n   templateUrl: './moneyback-policy.component.html',\r\n   styleUrls: ['./moneyback-policy.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MoneybackPolicyComponent implements OnInit {\r\n   paragraphs: string[] = [\r\n      'Активы - любые электронные валюты, фиатные безналичные и наличные национальные валюты, криптовалюты и токены;',\r\n      'Обменный сервис (Сервис) - программное обеспечение, размещенное в сети Интернет для обмена Активов;',\r\n      'Обмен - перевод Активов между счетами Сервиса и Пользователя;',\r\n      'Пользователь - любое лицо которое воспользовалось услугами Сервиса, отправило Активы на счета Сервиса намеренно для выполнения Обмена или ошибочно;',\r\n      'Заявка - желание клиента произвести обмен Активов, оформленное в электронном виде через пользовательские интерфейсы на сайтах Сервиса;',\r\n      'Таймаут - время, отведенное Пользователю для перечисления Активов на счета Сервиса для выполнения Обмена;',\r\n      'Неучтенные средства - Активы, зачисленные на счета Сервиса без оформления Заявки на сайтах Сервиса или Активы, зачисленные на счета Сервиса сверх сумм, указанных в Заявке;',\r\n      'Возврат - действия Сервиса по переводу Активов или Неучтенных средств со счетов Сервиса на счета Пользователей;',\r\n      'Refund - действия Сервиса по отмене состоявшегося Обмена с целью Возврата.',\r\n   ];\r\n\r\n   list: {\r\n      text: string;\r\n      sublist?: { text: string; paragraphs?: string[] }[];\r\n   }[] = [\r\n      {\r\n         text:\r\n            'Разработанная политика описывает действия и бездействия Сервиса по Возврату Активов Пользователям, а также комиссии, которые предусмотрены Сервисом за обработку Возвратов. Данная политика является неотъемлемой частью Правил оказания услуг Сервиса;',\r\n      },\r\n      {\r\n         text:\r\n            'Возврат может быть выполнен только на сумму не превышающую сумму Актива, отправленную Пользователем на счета Сервиса для Обмена;',\r\n      },\r\n      {\r\n         text:\r\n            'Возврат может быть выполнен только на счет Пользователя, указанного в Заявке или с которого Сервис принял Активы, за исключением случаев в п.#7.4 политики;',\r\n      },\r\n      {\r\n         text:\r\n            'Комиссия Сервиса за выполнения Возврата удерживается из суммы возвращаемого пользователю Актива;',\r\n      },\r\n      {\r\n         text: 'Обязанности Сервиса:',\r\n         sublist: [\r\n            {\r\n               text:\r\n                  'Сервис обязуется вернуть Активы, которые были отправлены Пользователем на счета Сервиса только в том случае если Обмен не состоялся. Пользователь не получил Активы от Сервиса на свои счета;',\r\n            },\r\n            {\r\n               text:\r\n                  'Сервис обязуется вернуть Неучтенные средства Пользователю;',\r\n            },\r\n         ],\r\n      },\r\n      {\r\n         text: 'Сервис вправе:',\r\n         sublist: [\r\n            {\r\n               text:\r\n                  'Не возвращать Активы или Неучтенные средства до обращения Пользователя за Возвратом. Любые действия Сервиса по Возврату Активов в соответствие с текущей политикой начинаются после обращения Пользователя в поддержку. Это означает, что без обращения Пользователя Сервис бездействует в отношение Возврата;',\r\n            },\r\n            {\r\n               text:\r\n                  'Не возмещать Пользователю комиссии платежных систем при Возврате;',\r\n            },\r\n            {\r\n               text:\r\n                  'Отказать Пользователю в процедуре Refund за исключением случаев предусмотренных в п.п.#7.3 политики;',\r\n            },\r\n            {\r\n               text:\r\n                  'Взимать комиссию за Возврат Неучтенных средств, указанную в п.#8',\r\n            },\r\n            {\r\n               text:\r\n                  'Взимать комиссию за Возврат, указанную в п.#8 в случае невозможности выполнить Обмен по причинам не зависящим от Сервиса, в частности, когда Сервис не в состоянии завершить Обмен на заблокированный или лимитированный счет Пользователя;',\r\n            },\r\n            {\r\n               text:\r\n                  'Взимать комиссию за Возврат, указанную в п.#8 для Заявок отмененных по Таймауту. Пользователь отправил Активы на счета Сервиса после отмены Заявки и требует Возврата;',\r\n            },\r\n            {\r\n               text:\r\n                  'В соответствие с п.п.#7.2 настоящей политики не выплачивать Пользователю дополнительных комиссий;',\r\n            },\r\n         ],\r\n      },\r\n      {\r\n         text: 'Особые условия:',\r\n         sublist: [\r\n            {\r\n               text:\r\n                  'Сервис хранит Активы Пользователя подлежащие Возврату на безвозмездной основе;',\r\n            },\r\n            {\r\n               text:\r\n                  'Сервис не распоряжается Активами Пользователя подлежащими Возврату в коммерческих интересах, никаким образом не извлекает инвестиционную или любую другую прибыль с таких Активов;',\r\n            },\r\n            {\r\n               text:\r\n                  'Сервис может пойти на уступки и выполнить Refund в случае ошибки Пользователя, а именно, когда Пользователь выполнил Обмен на недоступный ему счет, например на чужой счет;',\r\n               paragraphs: [\r\n                  'Для выполнения Refund Пользователь самостоятельно должен позаботиться о возврате ошибочно перечисленного Актива на счет Сервиса, договорится с владельцем счета или платежной системой о возврате.',\r\n                  'Сервис начинает обрабатывать Возврат пользователя на условиях, описанных в текущей политике и только после получения полной суммы ошибочно перечисленного Актива.',\r\n                  'За Возврат Активов Сервис удерживает комиссию, указанную в п.#8 политики;',\r\n               ],\r\n            },\r\n            {\r\n               text:\r\n                  'Сервис может пойти на уступки и выполнить Возврат на счет Пользователя отличный от указанного в Заявке, если требуется вернуть криптовалютный Актив или токены.',\r\n            },\r\n         ],\r\n      },\r\n      {\r\n         text: 'Комиссии:',\r\n         sublist: [\r\n            {\r\n               text:\r\n                  'За Возвраты предусмотренные политикой Сервис удерживает комиссию в соответствии с тарифом:',\r\n            },\r\n         ],\r\n      },\r\n   ];\r\n\r\n   constructor() {}\r\n\r\n   ngOnInit(): void {}\r\n}\r\n","<section class=\"moneyback-policy\">\r\n   <h2 class=\"title\">Политика возвратов</h2>\r\n\r\n   <p class=\"paragraph\" *ngFor=\"let p of paragraphs\">{{ p }}</p>\r\n   <ol class=\"ordered-list\">\r\n      <li class=\"list-item\" *ngFor=\"let li of list\">\r\n         {{ li.text }}\r\n         <ol class=\"ordered-list\" *ngIf=\"li.sublist\">\r\n            <li class=\"list-item\" *ngFor=\"let sublist of li.sublist\">\r\n               <p class=\"paragraph\">{{ sublist.text }}</p>\r\n               <p class=\"paragraph\" *ngFor=\"let p of sublist.paragraphs\">\r\n                  {{ p }}\r\n               </p>\r\n            </li>\r\n         </ol>\r\n      </li>\r\n   </ol>\r\n\r\n   <table>\r\n      <tbody>\r\n         <tr>\r\n            <td style=\"width: 50%\">\r\n               Любые электронные валюты, фиатные безналичные и наличные мировые\r\n               валюты, криптовалюты и токены\r\n            </td>\r\n            <td style=\"text-align: center\">1,5%</td>\r\n         </tr>\r\n      </tbody>\r\n   </table>\r\n</section>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n   selector: 'app-nav',\r\n   templateUrl: './nav.component.html',\r\n   styleUrls: ['./nav.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NavComponent implements OnInit {\r\n   constructor() {}\r\n\r\n   ngOnInit(): void {}\r\n}\r\n","<nav class=\"nav\">\r\n   <button mat-button routerLink=\"/\">Обмен</button>\r\n   <button mat-button routerLink=\"/about\">О сервисе</button>\r\n   <button mat-button routerLink=\"/tariffs\">Тарифы</button>\r\n   <button mat-button routerLink=\"/terms-of-use\">Правила</button>\r\n   <button mat-button routerLink=\"/moneybackPolicy\">Политика возвратов</button>\r\n</nav>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n   selector: 'app-section-about',\r\n   templateUrl: './section-about.component.html',\r\n   styleUrls: ['./section-about.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SectionAboutComponent implements OnInit {\r\n   constructor() {}\r\n\r\n   ngOnInit(): void {}\r\n}\r\n","<section class=\"about\">\r\n   <h2 class=\"about__title\">О сервисе</h2>\r\n\r\n   <p class=\"about__paragraph\">\r\n      С развитием информационных технологий коммерческие структуры получили\r\n      щедрый подарок – многомиллионную интернет-аудиторию, которая с радостью\r\n      предпочла онлайн-покупки в комфортной обстановке собственного дома\r\n      многочасовым хождениям по магазинам и утомительным очередям. Но, помимо\r\n      плюсов, системы электронной торговли имели один существенный недостаток –\r\n      оплата товаров наличными деньгами или кредитными картами оказалась весьма\r\n      проблематичной для большинства покупателей.\r\n   </p>\r\n   <p class=\"about__paragraph\">\r\n      Выходом из сложившейся ситуации стали электронные платежные системы,\r\n      которые значительно упростили взаиморасчеты между продавцами и\r\n      покупателями. Теперь для того чтобы расплатиться за покупки больше не\r\n      нужно ехать в офис интернет-магазина или переводить деньги со своего\r\n      банковского счета. Достаточно приобрести определенное количество титульных\r\n      знаков определенной платежной системы и с их помощью оплатить товары или\r\n      услуги в режиме онлайн. Но, к сожалению, разные интернет-магазины\r\n      принимают к оплате электронные деньги разных платежных систем. А потому\r\n      возникла острая необходимость в создании сервисов, которые оперативно\r\n      помогали бы пользователям решать проблемы с тем или иным видом электронной\r\n      валюты.\r\n   </p>\r\n   <p class=\"about__paragraph\">\r\n      Основная функция NetExchange – это обмен, ввод и вывод электронных валют\r\n      различных платежных систем России и СНГ. Миссия NetExchange – облегчить\r\n      пользователям проведение любых операций с электронными деньгами платежных\r\n      систем WebMoney, Yandex.Деньги, QIWI и др., помочь интернет-ресурсам\r\n      создать эффективные инструменты для взаиморасчетов с клиентами,\r\n      предоставить представителям традиционного бизнеса возможность оплаты их\r\n      товаров и услуг с помощью электронных денег.\r\n   </p>\r\n</section>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n   selector: 'app-section-rules',\r\n   templateUrl: './section-rules.component.html',\r\n   styleUrls: ['./section-rules.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SectionRulesComponent implements OnInit {\r\n   constructor() {}\r\n\r\n   ngOnInit(): void {}\r\n}\r\n","<h2 class=\"title\">Правила предоставления услуг</h2>\r\n<h3 class=\"sub-title\">Соглашение о предоставлении услуг сервисом EXWM</h3>\r\n\r\n<ol class=\"rules\">\r\n   <li class=\"rules__item\">\r\n      <h3 class=\"rules__title\">Общие положения</h3>\r\n      <p class=\"rules__info\">\r\n         Настоящее соглашение (далее по тексту Соглашение) описывает правила и\r\n         условия, на основании которых предоставляются услуги мультивалютного\r\n         обменного сервиса NetExchange и в соответствии со статьей 437\r\n         Гражданского Кодекса РФ является официальной письменной публичной\r\n         офертой, адресованной физическим и юридическим лицам (далее по тексту\r\n         Пользователь), заключить Соглашение о предоставлении услуг сервисом\r\n         NetExchange на изложенных ниже условиях.\r\n      </p>\r\n      <p class=\"rules__info\">\r\n         Перед тем как воспользоваться услугами сервиса NetExchange,\r\n         Пользователь обязан ознакомиться в полном объеме с условиями\r\n         «Соглашения о предоставлении услуг сервисом NetExchange».\r\n      </p>\r\n      <p class=\"rules__info\">\r\n         Использование услуг сервиса NetExchange возможно только, если\r\n         Пользователь принимает все условия Соглашения.\r\n      </p>\r\n      <p class=\"rules__info\">\r\n         Действующая версия Соглашения расположена для публичного доступа на\r\n         интернет-сайте сервиса NetExchange (www.netexchange.ru).\r\n      </p>\r\n   </li>\r\n   <li class=\"rules__item\">\r\n      <h3 class=\"rules__title\">\r\n         Термины и определения, используемые в Соглашении\r\n      </h3>\r\n      <p class=\"rules__info\">\r\n         Сервис NetExchange — торговая марка и коммерческое обозначение системы\r\n         предоставления интернет услуг по обмену, продаже и покупке электронных\r\n         валют. Интернет-сайт Сервиса – www.netexchange.ru.\r\n      </p>\r\n\r\n      <p class=\"rules__info\">\r\n         Пользователь — любое физическое или юридическое лицо, которое желает\r\n         воспользоваться услугами сервиса NetExchange и осуществившее акцепт\r\n         Соглашения в соответствии с его условиями. Платежная система —\r\n         программный продукт, созданный третьей стороной, представляющий собой\r\n         механизм реализации учета денежных и/или иных обязательств, оплату\r\n         товаров и услуг в сети Интернет, а также организацию взаиморасчетов\r\n         между своими пользователями.\r\n      </p>\r\n\r\n      <p class=\"rules__info\">\r\n         Электронная валюта – денежное и/или иное обязательство между\r\n         разработчиком данной валюты и ее пользователем, выраженное цифровым\r\n         способом.\r\n      </p>\r\n\r\n      <p class=\"rules__info\">\r\n         Платеж/операция— перевод электронной и/или иной валюты от плательщика к\r\n         получателю. Клиент платежной системы – лицо, заключившее соглашение с\r\n         соответствующей платежной системой на приобретение имущественных прав\r\n         требования к ней, измеряемых в условных единицах, принятых в\r\n         соответствующей платежной системе.\r\n      </p>\r\n\r\n      <p class=\"rules__info\">\r\n         Заявка – выражение намерения Пользователя воспользоваться одной из\r\n         услуг предлагаемых Сервисом NetExchange, путем заполнения электронной\r\n         формы через Интернет-сайт Сервиса, на условиях, описанных в Соглашении\r\n         и указанных в параметрах этой Заявки.\r\n      </p>\r\n\r\n      <p class=\"rules__info\">\r\n         Исходная валюта – электронная валюта, которую Пользователь желает\r\n         продать или обменять. Исходный счет – номер кошелька или любое другое\r\n         обозначения счета Пользователя в Платежной системе, с которого была\r\n         отправлена Исходная валюта.\r\n      </p>\r\n\r\n      <p class=\"rules__info\">\r\n         Результирующая валюта – электронная валюта, которую Пользовать получает\r\n         в результате продажи или обмена Исходной валюты.\r\n      </p>\r\n\r\n      <p class=\"rules__info\">\r\n         Результирующий счет– номер кошелька или любое другое обозначения счета\r\n         Пользователя в Платежной системе, на который будет отправлена\r\n         Результирующая валюта.\r\n      </p>\r\n\r\n      <p class=\"rules__info\">\r\n         Резерв валюты - имеющийся в распоряжении Сервиса NetExchange, на момент\r\n         создания Заявки, объем определенной Электронной валюты.\r\n      </p>\r\n\r\n      <p class=\"rules__info\">\r\n         Обмен валюты - обмен электронной валюте одной платежной системы на\r\n         электронную валюту другой платежной системы.\r\n      </p>\r\n\r\n      <p class=\"rules__info\">\r\n         Курс— стоимостное соотношение двух электронных валют при их обмене.\r\n         «Моментальный» — способ обмена Электронной валюты, при котором Сервис\r\n         NetExchange обязуется незамедлительно после получения от Пользователя\r\n         суммы Исходной валюты перечислить (передать) Пользователю сумму\r\n         Результирующей валюты.\r\n      </p>\r\n\r\n      <p class=\"rules__info\">\r\n         Хакер — квалифицированный компьютерный взломщик, злоумышленник,\r\n         специализирующийся на поиске и использовании несанкционированного\r\n         доступа в вычислительные сети или другое компьютеризированное\r\n         оборудование для незаконного получения информации, извлечения выгоды,\r\n         нанесения ущерба.\r\n      </p>\r\n   </li>\r\n\r\n   <li class=\"rules__item\">\r\n      <h3 class=\"rules__title\">Предмет Соглашения</h3>\r\n      <ol class=\"rules__sub-rules\">\r\n         <li class=\"rules__info\">\r\n            Предметом настоящего Соглашения является предоставление Пользователю\r\n            Сервисом NetExchange следующих услуг:\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            обмен электронной валюты (раздел 6 Соглашения);\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            продажа Пользователю электронной валюты (раздел 7 Соглашения);\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            покупка у Пользователя электронной валюты (раздел 8 Соглашения).\r\n         </li>\r\n      </ol>\r\n   </li>\r\n\r\n   <li class=\"rules__item\">\r\n      <h3 class=\"rules__title\">Порядок оказания услуг Сервисом</h3>\r\n      <ol class=\"rules__sub-rules\">\r\n         <li class=\"rules__info\">\r\n            Заказ услуг Сервиса NetExchange осуществляется Пользователем путем\r\n            направления Заявки через Интернет-сайт Сервиса.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Управление процессом сделки или получение информации о ходе\r\n            выполнения сделки Пользователем производятся при помощи\r\n            соответствующего пользовательского интерфейса, расположенного на\r\n            Интернет-сайте Сервиса.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Сервис NetExchange осуществляет исполнение Заявок на безотзывной\r\n            основе в соответствии с условиями работы соответствующих платежных\r\n            систем.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Сервис NetExchange не является стороной соглашения между Платежной\r\n            системой и Клиентом платежной системы и ни в коем случае не несет\r\n            ответственности за действия Платежной системы и ее Клиента. Права и\r\n            обязанности платежной системы и ее Клиента регулируются условиями\r\n            предоставления услуг соответствующих Платежных систем.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Сервис NetExchange не требует удостоверения в том, что отправитель и\r\n            получатель средств, участвующих в Операции, является одним и тем же\r\n            юридическим или физическим лицом, Сервис NetExchange не является\r\n            стороной во взаимоотношениях отправителя и получателя денежных\r\n            средств или электронной валюты.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Сервис NetExchange не проверяет правомочность и законность владения\r\n            Пользователем электронными валютами и/или денежными средствами,\r\n            участвующими в конкретной Операции.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Воспользовавшись услугами Сервиса NetExchange, Пользователь\r\n            подтверждает, что законно владеет и распоряжается денежными\r\n            средствами и электронной валютой, участвующими в соответствующем\r\n            Платеже.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Пользователь обязуется самостоятельно исчислять и уплачивать все\r\n            налоги, требуемые согласно налоговому законодательству места\r\n            нахождения Пользователя.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Заботясь о качестве оказываемых Пользователям услуг, Сервис\r\n            Netexchange обязуется совершать все действия, в рамках настоящего\r\n            Соглашения, макисмально оперативно.\r\n         </li>\r\n      </ol>\r\n   </li>\r\n\r\n   <li class=\"rules__item\">\r\n      <h3 class=\"rules__title\">Стоимость услуг</h3>\r\n      <ol class=\"rules__sub-rules\">\r\n         <li class=\"rules__info\">\r\n            Стоимость услуг Сервиса устанавливается руководством Сервиса и\r\n            публикуется на интернет-сайте Сервиса.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Сервис вправе самостоятельно изменять курсы обмена электронных валют\r\n            и взимаемых комиссионных в любое время в одностороннем порядке, о\r\n            чем уведомляет Пользователей сервиса предварительным размещением\r\n            информации об этих изменениях на интернет-сайте Сервиса.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            В Заявке создаваемой Пользователем на интернет сайте сервиса\r\n            указывается Курс, размер комиссии, взимаемый соответствующей\r\n            Платежной системой, за проведение Операции, размер вознаграждения\r\n            Сервиса NetExchange, способ Обмена, а также общая сумма\r\n            перечисляемых денежных средств или электронной валюты.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Сервис NetExchange взимает стоимость своего вознаграждения в момент\r\n            проведения соответствующей Операции.\r\n         </li>\r\n      </ol>\r\n   </li>\r\n\r\n   <li class=\"rules__item\">\r\n      <h3 class=\"rules__title\">Обмен электронной валюты</h3>\r\n      <ol class=\"rules__sub-rules\">\r\n         <li class=\"rules__info\">\r\n            Путем оформления Заявки Пользователь поручает, а Сервис NetExchange\r\n            от своего имени и за счет Пользователя, совершает действия по обмену\r\n            Электронной валюты одной Платежной системы (Исходная валюта) на\r\n            Электронную валюту другой Платежной системы (Результирующая валюта)\r\n            выбранной Пользователем.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Пользователь обязуется перечислить (передать) Исходную валюту, в\r\n            размере указанном в Заявке, а Сервис NetExchange, после получения\r\n            соответствующей Электронной валюты, обязуется перечислить (передать)\r\n            Пользователю Результирующую валюту, рассчитанную по Курсу и в\r\n            соответствие с тарифами сервиса.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            После оформления заявки Пользователь имеет возможность изменить\r\n            способ Обмена с Экономичного на Моментальный, оплатив стоимость\r\n            данной услуги в соответствие с тарифами сервиса.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Размер вознаграждения Сервиса NetExchange за действия, указанные в\r\n            пункте 6.1.,6.3. и 6.5. Соглашения, отражается в Заявке и\r\n            подтверждается Пользователем нажатием кнопки «Далее» на одной из\r\n            страниц пользовательского интерфейса при оформление заявки.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Обязанность Сервиса NetExchange по перечислению (передаче)\r\n            Электронной валюты Пользователю считается исполненной в момент\r\n            списания Электронной валюты в соответствующей Платежной системе со\r\n            счета Сервиса NetExchange, что регистрируется в истории операций\r\n            соответствующей Платежной системы.\r\n         </li>\r\n      </ol>\r\n   </li>\r\n\r\n   <li class=\"rules__item\">\r\n      <h3 class=\"rules__title\">Покупка Пользователем электронной валюты</h3>\r\n      <ol class=\"rules__sub-rules\">\r\n         <li class=\"rules__info\">\r\n            Путем оформления Заявки Пользователь поручает, а Сервис NetExchange\r\n            от своего имени и за счет Пользователя, совершает действия по\r\n            приобретению и передаче Электронной валюты Пользователю.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Размер вознаграждения Сервиса NetExchange за действия, указанные в\r\n            пункте 7.1. Соглашения, отражается в Заявке и подтверждается\r\n            Пользователем нажатием кнопки «Далее» на одной из страниц\r\n            пользовательского интерфейса.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            В течение 12 часов с момента получения денежных средств от\r\n            Пользователя, в размере указанном в соответствующей Заявке, Сервис\r\n            NetExchange обязан перечислить(передать) Результирующую валюту на\r\n            реквизиты и в размере указанными Пользователем в Заявке.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Сервис NetExchange вправе отменить созданную Пользователем заявку на\r\n            покупку Электронной валюты за наличные рубли, если оплата по такой\r\n            заявке не поступила в расчетную кассу сервиса по истечения суток с\r\n            момента создания такой заявки.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Сервис NetExchange вправе отменить созданную Пользователем заявку на\r\n            покупку Электронной валюты за безналичные рубли, если оплата по\r\n            такой заявке не поступила на расчетный счет сервиса по истечению 60\r\n            часов с момента создания такой заявки.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            <p class=\"rules__sub-info\">\r\n               В целях противодействия мошенническим операциям, при расчетах в\r\n               сети Интернет, банковскими картами международных платежных систем\r\n               Visa и MasterCard Сервис NetExchange вправе лимитировать операции\r\n               покупки электронных валют при помощи банковских карт и\r\n               устанавливает следующие ограничения:\r\n            </p>\r\n            <p class=\"rules__sub-info\">\r\n               - максимальная сумма покупки электронных валют в сутки, по одной\r\n               банковской карте, составляет 20000 (двадцать тысяч) рублей;\r\n            </p>\r\n            <p class=\"rules__sub-info\">\r\n               - максимальная сумма покупки электронных валют в месяц, по одной\r\n               банковской карте, составляет 100000 (сто тысяч) рублей;\r\n            </p>\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Обязанность Сервиса NetExchange по перечислению (передаче)\r\n            Результирующей валюты Пользователю считается исполненной в момент\r\n            списания Электронной валюты в соответствующей Платежной системе со\r\n            счета Сервиса NetExchange, что регистрируется в истории операций\r\n            соответствующей Платежной системы.\r\n         </li>\r\n      </ol>\r\n   </li>\r\n\r\n   <li class=\"rules__item\">\r\n      <h3 class=\"rules__title\">Продажа Пользователем электронной валюты</h3>\r\n      <ol class=\"rules__sub-rules\">\r\n         <li class=\"rules__info\">\r\n            Путем оформления Заявки Пользователь поручает, а Сервис NetExchange\r\n            от своего имени и за счет Пользователя, покупает электронную валюту\r\n            у Пользователя, а также совершает действия по передаче денежного\r\n            эквивалента Пользователю в сумме, указанной в Заявке.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            В течение 3 (трех) рабочих дней с момента получения Исходной валюты\r\n            от Пользователя, в размере указанном в соответствующей Заявке,\r\n            Сервис NetExchange обязан передать Пользователю рублевый денежный\r\n            эквивалент перечисленной Электронной валюты, способом выбранным\r\n            Пользователем при подаче Заявки.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Размер вознаграждения Сервиса NetExchange за действия, указанные в\r\n            пункте 8.1. Соглашения, отражается в Заявке и подтверждается\r\n            Пользователем нажатием кнопки «Далее» на одной из страниц\r\n            пользовательского интерфейса.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Обязанность Сервиса NetExchange по перечислению денежного рублевого\r\n            эквивалента переданной Электронной валюты считается исполненной в\r\n            момент списания соответствующей суммы с расчетного счета Сервиса\r\n            NetExchange.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            В случае неполучения Пользователем рублевого денежного эквивалента,\r\n            по вине Пользователя в течение двух суток с момента оплаты заявки,\r\n            Сервис Netexchange вправе возвратить Пользователю Электронную валюту\r\n            на Исходный счет за вычетом комиссии Платежной системы, если такая\r\n            присутствует.\r\n         </li>\r\n      </ol>\r\n   </li>\r\n\r\n   <li class=\"rules__item\">\r\n      <h3 class=\"rules__title\">Вступление Соглашения в силу</h3>\r\n      <ol class=\"rules__sub-rules\">\r\n         <li class=\"rules__info\">\r\n            Настоящее Соглашение считается заключенным на условиях публичной\r\n            оферты, акцептуемой Пользователем в ходе подачи им Заявки.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Публичной офертой признается отображаемая Сервисом NetExchange\r\n            информация о параметрах и условиях Заявки.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Акцептом публичной оферты признается совершение Пользователем\r\n            действий по завершению формирования Заявки, подтверждающих его\r\n            намерение воспользоваться услугами Сервиса NetExchange на условиях,\r\n            описанных в настоящем Соглашениях и указанных в Заявке.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Дата и время акцепта, а также параметры условий Заявки фиксируются\r\n            Сервисом NetExchange автоматически в момент завершения формирования\r\n            заявки.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Соглашение вступает в силу с момента завершения формирования Заявки\r\n            Пользователем. Пользователь имеет право отказаться от совершения\r\n            операции по Заявке. Период совершения акцепта Пользователем\r\n            составляет 24 часа с момента завершения формирования Заявки.\r\n         </li>\r\n      </ol>\r\n   </li>\r\n   <li class=\"rules__item\">\r\n      <h3 class=\"rules__title\">Ответственность Сторон</h3>\r\n      <ol class=\"rules__sub-rules\">\r\n         <li class=\"rules__info\">\r\n            Сервис NetExchange несет ответственность перед Пользователем в\r\n            размере, не превышающем вверенной Пользователем суммы денежных\r\n            средств или электронной валюты.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Сервис NetExchange не отвечает за неисправности, ошибки и сбои в\r\n            работе программных и/или аппаратных средств, обеспечивающих\r\n            функционирование услуг Сервиса NetExchange, возникшие по причинам,\r\n            не зависящим от Сервиса NetExchange, а также связанные с этим убытки\r\n            Пользователя.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Сервис Netexchange оказывает услуги только по обмену, покупке и\r\n            продаже электронных валют. Netexchange ни коем образом не принимает\r\n            оплату в пользу каких-либо третьих лиц, а также, запрещает обмен на\r\n            кошельки/счета, которые не принадлежат пользователю. Netexchange не\r\n            вступает ни в какие партнерские отношения, не заключает ни каких\r\n            договоров с получателями платежей за свои товары или услуги, а\r\n            категорически против таких отношений. Netexchange нельзя\r\n            использовать как промежуточный сервис для взаиморасчетов между\r\n            покупателем и продавцом (заказчиком и исполнителем и т.д.).\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Сервис NetExchange не отвечает за убытки Пользователя, возникшие в\r\n            результате неправомерных действий третьих лиц.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Пользователь несет всю ответственность за достоверность сведений,\r\n            указанных им при заполнении Заявки. В случае если Пользователь не\r\n            указал или неверно указал персональные данные, Сервис NetExchange не\r\n            отвечает за убытки Пользователя, понесенные в результате допущенной\r\n            ошибки.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Стороны освобождаются от ответственности за полное или частичное\r\n            неисполнение своих обязательств по Соглашению, если таковое явилось\r\n            следствием обстоятельств непреодолимой силы, возникших после\r\n            вступления в силу Соглашения, в результате событий чрезвычайного\r\n            характера, которые не могли быть предвидены и предотвращены\r\n            разумными мерами.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            В других случаях неисполнения или ненадлежащего исполнения своих\r\n            обязательств по Соглашению Стороны несут ответственность в\r\n            соответствии с законодательством Российской Федерации с учетом\r\n            условий Соглашения.\r\n         </li>\r\n      </ol>\r\n   </li>\r\n   <li class=\"rules__item\">\r\n      <h3 class=\"rules__title\">Прочие положения</h3>\r\n      <ol class=\"rules__sub-rules\">\r\n         <li class=\"rules__info\">\r\n            Сервис NetExchange вправе в одностороннем порядке вносить изменения\r\n            в Соглашения путем публикации изменений на Сайте Системы. Изменения\r\n            вступают в силу с момента опубликования, если иной срок вступления\r\n            изменений в силу не определен дополнительно при их публикации.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Сервис NetExchange вправе в случае подозрительных действий в\r\n            процессе оформления заявки пользователем, во избежание ущерба от\r\n            Хакерских атак приостанавливать выполнения таких операций до\r\n            выяснения причин этих действий.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Сервис NetExchange вправе отказать в выполнение операции обмена,\r\n            покупки и продажи электронных валют, если передача Исходной валюты\r\n            на счет сервиса была произведена без оформления заявки при помощи\r\n            пользовательских интерфейсов на сайте сервиса. Электронная валюта,\r\n            перечисленная на соответствующие счета сервиса, без оформления\r\n            заявки при помощи пользовательских интерфейсов на сайте сервиса\r\n            может быть возвращена пользователю по запросу с учетом вычета\r\n            комиссии Платежной системы, если таковая присутствует.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Сервис NetExchange вправе отменить созданную Пользователем заявку,\r\n            если в течение одного часа первый не получил Результирующую валюту в\r\n            сумме указанной Пользователем в заявке, то есть Пользователь не\r\n            оплатил Заявку.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Сервис NetExchange вправе отправлять Пользователю на указанный\r\n            e-mail информацию о состояние процесса обмена, т.к. это является\r\n            неотъемлемой частью процесса успешного завершения обмена.\r\n         </li>\r\n         <li class=\"rules__info\">\r\n            Все споры и разногласия, возникшие или могущие возникнуть из\r\n            настоящего Соглашения, подлежат разрешению путем переговоров на\r\n            основании письменного заявления Пользователя. Сервис NetExchange\r\n            после получения от Пользователя претензии обязан в течение 15\r\n            (пятнадцати) дней удовлетворить заявленные в претензии требования\r\n            либо направить Пользователю мотивированный отказ. К ответу должны\r\n            быть приложены все необходимые документы. В случае если возникший\r\n            спор не будет разрешен в претензионном порядке в течение 60\r\n            (шестидесяти) дней, любая из Сторон вправе обратиться за разрешением\r\n            спора в суд по месту нахождения Сервиса.11.7. Местом заключения и\r\n            местом исполнения Соглашения является г. Москва, Российская\r\n            Федерация.\r\n         </li>\r\n      </ol>\r\n   </li>\r\n\r\n   <li class=\"rules__item\">\r\n      <h3 class=\"rules__title\">УВЕДОМЛЕНИЕ О РИСКАХ.</h3>\r\n      <p class=\"rules__info\">\r\n         Предлагаемые товары и услуги предоставляются не по заказу лица либо\r\n         предприятия, эксплуатирующего систему WebMoney Transfer. Мы являемся\r\n         независимым предприятием, оказывающим услуги, и самостоятельно\r\n         принимаем решения о ценах и предложениях. Предприятия, эксплуатирующие\r\n         систему WebMoney Transfer, не получают комиссионных вознаграждений или\r\n         иных вознаграждений за участие в предоставлении услуг и не несут\r\n         никакой ответственности за нашу деятельность.Аттестация, произведенная\r\n         со стороны WebMoney Transfer, лишь подтверждает наши реквизиты для\r\n         связи и удостоверяет личность. Она осуществляется по нашему желанию и\r\n         не означает, что мы каким-либо образом связаны с продажами операторов\r\n         системы WebMoney.\r\n      </p>\r\n   </li>\r\n</ol>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromRoot from '../../../../store/index';\r\nimport { Observable } from 'rxjs';\r\nimport { Exchange } from '@models/exchange.model';\r\nimport { Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n   selector: 'app-section-tariffs',\r\n   templateUrl: './section-tariffs.component.html',\r\n   styleUrls: ['./section-tariffs.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SectionTariffsComponent implements OnInit {\r\n   exchanges$: Observable<Exchange[]>;\r\n   columnsToDisplay = ['givenCurrency', 'takenCurrency', 'reserve'];\r\n   constructor(\r\n      private store: Store<fromRoot.AppState>,\r\n      private router: Router\r\n   ) {}\r\n\r\n   ngOnInit(): void {\r\n      this.exchanges$ = this.store\r\n         .select(fromRoot.getAllExchanges)\r\n         .pipe(map((exchanges) => exchanges.slice().sort(this.sort)));\r\n   }\r\n\r\n   onNavigate(exchange: Exchange): void {\r\n      if (!exchange.isActive) {\r\n         return;\r\n      }\r\n\r\n      this.router.navigate(['/exchanges', exchange.id]);\r\n   }\r\n\r\n   private sort(a: Exchange, b: Exchange): number {\r\n      if (a.givenCurrency.name > b.givenCurrency.name) {\r\n         return 1;\r\n      } else if (a.givenCurrency.name < b.givenCurrency.name) {\r\n         return -1;\r\n      }\r\n\r\n      return 0;\r\n   }\r\n}\r\n","<h2 class=\"title\">Тарифы на обмен</h2>\r\n\r\n<table mat-table [dataSource]=\"exchanges$ | async\" class=\"table\">\r\n   <ng-container matColumnDef=\"givenCurrency\">\r\n      <th mat-header-cell *matHeaderCellDef>{{ 'Отдаете' | uppercase }}</th>\r\n      <td mat-cell *matCellDef=\"let exchange\">\r\n         <div class=\"vertical-center\">\r\n            <app-currency-img\r\n               [icon]=\"exchange.givenCurrency.icon\"\r\n               [alt]=\"exchange.givenCurrency.stringId\"\r\n            ></app-currency-img>\r\n            {{ exchange.givenCurrencyCourse }} {{ exchange.givenCurrency.name }}\r\n         </div>\r\n      </td>\r\n   </ng-container>\r\n\r\n   <ng-container matColumnDef=\"takenCurrency\">\r\n      <th mat-header-cell *matHeaderCellDef>{{ 'Получаете' | uppercase }}</th>\r\n      <td mat-cell *matCellDef=\"let exchange\">\r\n         <div class=\"vertical-center\">\r\n            <app-currency-img\r\n               [icon]=\"exchange.takenCurrency.icon\"\r\n               [alt]=\"exchange.takenCurrency.stringId\"\r\n            ></app-currency-img>\r\n            {{ exchange.takenCurrencyCourse }} {{ exchange.takenCurrency.name }}\r\n         </div>\r\n      </td>\r\n   </ng-container>\r\n\r\n   <ng-container matColumnDef=\"reserve\">\r\n      <th mat-header-cell *matHeaderCellDef>{{ 'Резерв' | uppercase }}</th>\r\n      <td mat-cell *matCellDef=\"let exchange\">\r\n         {{ exchange.takenCurrency.reserve }}\r\n      </td>\r\n   </ng-container>\r\n\r\n   <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n   <tr\r\n      mat-row\r\n      *matRowDef=\"let row; columns: columnsToDisplay\"\r\n      [class]=\"{\r\n         row: true,\r\n         inActive: !row.isActive\r\n      }\"\r\n      (click)=\"onNavigate(row)\"\r\n   ></tr>\r\n</table>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n   selector: 'app-section-third-message',\r\n   templateUrl: './section-third-message.component.html',\r\n   styleUrls: ['./section-third-message.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SectionThirdMessageComponent implements OnInit {\r\n   constructor() {}\r\n\r\n   ngOnInit(): void {}\r\n}\r\n","<h2>Что если время кончилось, а оплатить не успел?</h2>\r\n<div class=\"text\">\r\n   <p>\r\n      В соответствии с Правилами предоставления услуг, по истечении этого\r\n      времени заявка будет отменена\r\n   </p>\r\n   <p>\r\n      После нажатия на кнопку \"Оплатить\" Вы будете автоматически перенаправлены\r\n      на страницу оплаты платежной системы, где, следуя простым указаниям,\r\n      сможете совершить оплату.\r\n   </p>\r\n   <p>\r\n      Успешно оплатили заявку - автоматически вернетесь назад. Обмен будет\r\n      завершен\r\n   </p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromRoot from '../../../../store/index';\r\nimport { Exchange } from './../../../../core/models/exchange.model';\r\nimport { first } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport * as ProgressActions from '../../../../store/actions/progress.actions';\r\n\r\n@Component({\r\n   selector: 'app-section-trade-first',\r\n   templateUrl: './section-trade-first.component.html',\r\n   styleUrls: ['./section-trade-first.component.scss'],\r\n})\r\nexport class SectionTradeFirstComponent implements OnInit {\r\n   givenCurrencies: Exchange[] = [];\r\n   takenCurrencies: Exchange[] = [];\r\n   selectedId: string;\r\n\r\n   private exchanges: Exchange[];\r\n   constructor(\r\n      private store: Store<fromRoot.AppState>,\r\n      private router: Router\r\n   ) {}\r\n\r\n   ngOnInit(): void {\r\n      this.store.dispatch(ProgressActions.setCurrentProcess({ payload: 1 }));\r\n\r\n      this.store\r\n         .select(fromRoot.getAllExchanges)\r\n         .pipe(first())\r\n         .subscribe((data) => {\r\n            this.exchanges = data;\r\n            this.getUniqueExchanges(data);\r\n            this.selectCurrentExchange(data[0]);\r\n         });\r\n   }\r\n\r\n   selectCurrentExchange(exchange: Exchange): void {\r\n      this.selectedId = exchange.id;\r\n      this.getTakenCurrencies(exchange);\r\n   }\r\n\r\n   onExchangeSelect(exchange: Exchange): void {\r\n      if (!exchange.isActive) {\r\n         return;\r\n      }\r\n\r\n      this.router.navigate(['exchanges', exchange.id]);\r\n   }\r\n\r\n   private getUniqueExchanges(exchanges: Exchange[]): void {\r\n      const checkedExchanges = {};\r\n\r\n      for (const e of exchanges) {\r\n         if (!checkedExchanges[e.givenCurrency.name]) {\r\n            this.givenCurrencies.push(e);\r\n            checkedExchanges[e.givenCurrency.name] = true;\r\n         }\r\n      }\r\n   }\r\n\r\n   private getTakenCurrencies(exchange: Exchange): void {\r\n      this.takenCurrencies = [];\r\n      const exchanges = this.exchanges;\r\n\r\n      for (const key of exchanges) {\r\n         if (key.givenCurrency.name === exchange.givenCurrency.name) {\r\n            this.takenCurrencies.push(key);\r\n         }\r\n      }\r\n   }\r\n}\r\n","<div class=\"table\">\r\n   <div class=\"left\">\r\n      <h2 class=\"title\">Отдаете</h2>\r\n\r\n      <div\r\n         class=\"currency\"\r\n         *ngFor=\"let exchange of givenCurrencies\"\r\n         (click)=\"selectCurrentExchange(exchange)\"\r\n         [class.selected]=\"exchange.id === selectedId\"\r\n      >\r\n         <app-currency-img\r\n            [icon]=\"exchange.givenCurrency.icon\"\r\n            [alt]=\"exchange.givenCurrency.stringId\"\r\n         ></app-currency-img>\r\n         <p class=\"currency__name\">{{ exchange.givenCurrency.name }}</p>\r\n      </div>\r\n   </div>\r\n   <div class=\"right\">\r\n      <h2 class=\"title\">Получаете</h2>\r\n\r\n      <ng-container *ngIf=\"selectedId\">\r\n         <div\r\n            [class]=\"{\r\n               currency: true,\r\n               inActive: !exchange.isActive\r\n            }\"\r\n            *ngFor=\"let exchange of takenCurrencies\"\r\n            disabled=\"!exchange.isActive\"\r\n            (click)=\"onExchangeSelect(exchange)\"\r\n         >\r\n            <app-currency-img\r\n               [icon]=\"exchange.takenCurrency.icon\"\r\n               [alt]=\"exchange.takenCurrency.stringId\"\r\n            ></app-currency-img>\r\n            <div class=\"currency__info\">\r\n               <p class=\"currency__name no-margin\">\r\n                  {{ exchange.takenCurrency.name }}\r\n               </p>\r\n               <p class=\"currency__value no-margin\">\r\n                  <span class=\"course\">\r\n                     {{ exchange.givenCurrencyCourse }}\r\n                     :\r\n                     {{ exchange.takenCurrencyCourse }}\r\n                  </span>\r\n                  | Резерв {{ exchange.takenCurrency.reserve }}\r\n               </p>\r\n            </div>\r\n         </div>\r\n      </ng-container>\r\n   </div>\r\n</div>\r\n","import { Progress } from './../../../../core/models/progress.model';\r\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { pluck } from 'rxjs/operators';\r\nimport * as fromApp from '../../../../store/index';\r\n\r\n@Component({\r\n   selector: 'app-section-trade-progress',\r\n   templateUrl: './section-trade-progress.component.html',\r\n   styleUrls: ['./section-trade-progress.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SectionTradeProgressComponent implements OnInit {\r\n   progress$: Observable<number>;\r\n   levels: Progress[] = [\r\n      {\r\n         id: 1,\r\n         isCompleted: false,\r\n         isCurrent: true,\r\n         text: 'Выберите направление обмена',\r\n      },\r\n      {\r\n         id: 2,\r\n         isCompleted: false,\r\n         isCurrent: false,\r\n         text: 'Платежная информация',\r\n      },\r\n      {\r\n         id: 3,\r\n         isCompleted: false,\r\n         isCurrent: false,\r\n         text: 'Подтверждение, оплата',\r\n      },\r\n   ];\r\n\r\n   constructor(private store: Store<fromApp.AppState>) {}\r\n\r\n   ngOnInit(): void {\r\n      this.progress$ = this.store\r\n         .select('progress')\r\n         .pipe(pluck('currentProgress'));\r\n   }\r\n}\r\n","<div class=\"progress\">\r\n   <div class=\"progress__block\" *ngFor=\"let progress of levels\">\r\n      <p\r\n         [class]=\"{\r\n            progress__level: true,\r\n            completed: progress.id < (progress$ | async),\r\n            current: progress.id === (progress$ | async)\r\n         }\"\r\n      >\r\n         <mat-icon *ngIf=\"progress.id < (progress$ | async); else first\"\r\n            >done</mat-icon\r\n         >\r\n         <ng-template #first>{{ progress.id }}</ng-template>\r\n      </p>\r\n      <div class=\"progress__container\">\r\n         <p class=\"progress__text\">\r\n            {{ progress.text }}\r\n         </p>\r\n      </div>\r\n   </div>\r\n</div>\r\n","import { Currency } from './../../../../core/models/currency.model';\r\nimport { WebmoneyService } from './../../../../core/services/webmoney.service';\r\nimport { Exchange } from './../../../../core/models/exchange.model';\r\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n   FormControl,\r\n   FormGroup,\r\n   ValidationErrors,\r\n   Validators,\r\n} from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { catchError, filter, first, map, tap } from 'rxjs/operators';\r\nimport * as fromRoot from '../../../../store/index';\r\nimport * as ProgressActions from '../../../../store/actions/progress.actions';\r\nimport * as OrderActions from '../../../../store/actions/order.actions';\r\nimport { Order } from '@models/order.model';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Component({\r\n   selector: 'app-section-trade-second',\r\n   templateUrl: './section-trade-second.component.html',\r\n   styleUrls: ['./section-trade-second.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SectionTradeSecondComponent implements OnInit {\r\n   form: FormGroup;\r\n   exchange$: Observable<Exchange>;\r\n\r\n   fields: { [key: string]: boolean } = {};\r\n   webmoneyErrorMessage = `Платежная система WebMoney не разрешает данный обмен. Возможно, это связано с\r\n   тем, что кошельки не принадлежат одному WMID, не связаны, или данные\r\n   участника системы Webmoney не совпадают с указанными.`;\r\n\r\n   private takenCourse: number;\r\n   private givenCourse: number;\r\n   constructor(\r\n      private store: Store<fromRoot.AppState>,\r\n      private webmoneyService: WebmoneyService\r\n   ) {}\r\n\r\n   ngOnInit(): void {\r\n      this.store.dispatch(ProgressActions.setCurrentProcess({ payload: 2 }));\r\n\r\n      this.exchange$ = this.store.select(fromRoot.getExchange).pipe(\r\n         filter((exchange) => !!exchange),\r\n         tap((exchange) => {\r\n            this.takenCourse = exchange.takenCurrencyCourse;\r\n            this.givenCourse = exchange.givenCurrencyCourse;\r\n\r\n            for (const control of exchange.fields) {\r\n               this.fields[control] = true;\r\n            }\r\n\r\n            this.initForm(exchange);\r\n         })\r\n      );\r\n   }\r\n\r\n   onCurrencyChange(property: string, value: number): void {\r\n      if (!value || value < 0) {\r\n         return this.form.get(property).patchValue('');\r\n      }\r\n\r\n      let calculatedCurrency;\r\n\r\n      if (property.startsWith('taken')) {\r\n         calculatedCurrency = this.takenCourse * value;\r\n      } else {\r\n         calculatedCurrency = value / this.takenCourse;\r\n      }\r\n\r\n      if (property.startsWith('taken') && this.givenCourse > this.takenCourse) {\r\n         calculatedCurrency = value / this.givenCourse;\r\n      }\r\n\r\n      this.form.get(property).patchValue(calculatedCurrency);\r\n   }\r\n\r\n   onSubmit(exchange: Exchange): void {\r\n      if (!this.form.valid) {\r\n         return;\r\n      }\r\n\r\n      const order: Order = {\r\n         ...this.form.value,\r\n         phone: this.form.value.phone,\r\n         givenCurrency: exchange.givenCurrency.id,\r\n         takenCurrency: exchange.takenCurrency.id,\r\n         givenCurrencyCourse: exchange.givenCurrencyCourse,\r\n         takenCurrencyCourse: exchange.takenCurrencyCourse,\r\n         merchant: exchange.merchant,\r\n      };\r\n\r\n      this.store.dispatch(OrderActions.createOrderStart({ payload: order }));\r\n   }\r\n\r\n   private initForm(exchange: Exchange): void {\r\n      const givenCurrency = exchange.givenCurrency;\r\n      const takenCurrency = exchange.takenCurrency;\r\n      const optionalControls = this.getOptionalControls(\r\n         givenCurrency,\r\n         takenCurrency\r\n      );\r\n\r\n      const controls = {\r\n         givenCurrencyAmount: new FormControl('', {\r\n            validators: [\r\n               Validators.required,\r\n               Validators.min(exchange.minGivenCurrency),\r\n               Validators.max(exchange.maxGivenCurrency),\r\n            ],\r\n         }),\r\n         takenCurrencyAmount: new FormControl('', {\r\n            validators: [\r\n               Validators.required,\r\n               Validators.min(\r\n                  exchange.minGivenCurrency * exchange.takenCurrencyCourse\r\n               ),\r\n               Validators.max(exchange.takenCurrency.reserve),\r\n            ],\r\n         }),\r\n      };\r\n\r\n      for (const control of exchange.fields) {\r\n         controls[control] = optionalControls[control];\r\n      }\r\n\r\n      this.form = new FormGroup(controls, {\r\n         updateOn: 'submit',\r\n      });\r\n\r\n      if (exchange.enableWMInterface) {\r\n         this.form.setAsyncValidators(this.webmoneyValidator.bind(this));\r\n      }\r\n   }\r\n\r\n   private getOptionalControls(\r\n      givenCurrency: Currency,\r\n      takenCurrency: Currency\r\n   ): { [key: string]: FormControl } {\r\n      return {\r\n         givenCurrencyCard: new FormControl('', {\r\n            validators: [\r\n               Validators.required,\r\n               Validators.pattern(\r\n                  givenCurrency.validator && givenCurrency.validator.regex\r\n               ),\r\n            ],\r\n         }),\r\n         takenCurrencyCard: new FormControl('', {\r\n            validators: [\r\n               Validators.required,\r\n               Validators.pattern(\r\n                  takenCurrency.validator && takenCurrency.validator.regex\r\n               ),\r\n            ],\r\n         }),\r\n         name: new FormControl('', {\r\n            validators: [Validators.required],\r\n         }),\r\n         surname: new FormControl('', {\r\n            validators: [Validators.required],\r\n         }),\r\n         phone: new FormControl('', {\r\n            validators: [\r\n               Validators.required,\r\n               Validators.pattern('^[0-9]{1,4}[0-9]{10}$'),\r\n            ],\r\n         }),\r\n         email: new FormControl('', {\r\n            validators: [Validators.required, Validators.email],\r\n         }),\r\n      };\r\n   }\r\n\r\n   private webmoneyValidator(): Observable<ValidationErrors | null> {\r\n      const order: Order = {\r\n         ...this.form.value,\r\n      };\r\n\r\n      return this.webmoneyService.check(order).pipe(\r\n         map((result) => (result ? null : { invalidData: true })),\r\n         catchError(() => of({ invalidData: true }))\r\n      );\r\n   }\r\n}\r\n","<ng-container *ngIf=\"exchange$ | async as exchange\">\r\n   <h2 class=\"title\" *ngIf=\"exchange\">\r\n      Обмен {{ exchange.givenCurrency.name }} на\r\n      {{ exchange.takenCurrency.name }}\r\n   </h2>\r\n\r\n   <app-error-message\r\n      *ngIf=\"form.hasError('invalidData')\"\r\n      [message]=\"webmoneyErrorMessage\"\r\n   ></app-error-message>\r\n\r\n   <form\r\n      *ngIf=\"form\"\r\n      class=\"form\"\r\n      [formGroup]=\"form\"\r\n      (ngSubmit)=\"onSubmit(exchange)\"\r\n   >\r\n      <div class=\"row\">\r\n         <mat-form-field\r\n            class=\"form__group min-max\"\r\n            [attr.min]=\"[exchange.minGivenCurrency]\"\r\n            [attr.max]=\"[exchange.maxGivenCurrency]\"\r\n         >\r\n            <mat-label\r\n               >Отдаете в\r\n               {{ exchange.givenCurrency.currencyCode | getMoneyIn }}</mat-label\r\n            >\r\n            <input\r\n               matInput\r\n               required\r\n               (input)=\"\r\n                  onCurrencyChange('takenCurrencyAmount', $event.target.value)\r\n               \"\r\n               formControlName=\"givenCurrencyAmount\"\r\n            />\r\n         </mat-form-field>\r\n\r\n         <mat-form-field\r\n            class=\"form__group reserve\"\r\n            [attr.reserve]=\"[exchange.takenCurrency.reserve]\"\r\n         >\r\n            <mat-label\r\n               >Получаете в\r\n               {{ exchange.takenCurrency.currencyCode | getMoneyIn }}</mat-label\r\n            >\r\n            <input\r\n               matInput\r\n               required\r\n               (input)=\"\r\n                  onCurrencyChange('givenCurrencyAmount', $event.target.value)\r\n               \"\r\n               formControlName=\"takenCurrencyAmount\"\r\n            />\r\n         </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\" *ngIf=\"fields['givenCurrencyCard']\">\r\n         <mat-form-field class=\"form__group\">\r\n            <mat-label\r\n               >Номер\r\n               {{\r\n                  exchange.givenCurrency.name.startsWith('Webmoney')\r\n                     ? 'кошелька ' + exchange.givenCurrency.stringId\r\n                     : 'карты'\r\n               }}\r\n            </mat-label>\r\n            <input matInput required formControlName=\"givenCurrencyCard\" />\r\n         </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\" *ngIf=\"fields['takenCurrencyCard']\">\r\n         <mat-form-field class=\"form__group\">\r\n            <mat-label\r\n               >Номер\r\n               {{\r\n                  exchange.takenCurrency.name.startsWith('Webmoney')\r\n                     ? 'кошелька ' + exchange.takenCurrency.stringId\r\n                     : 'карты'\r\n               }}</mat-label\r\n            >\r\n            <input matInput required formControlName=\"takenCurrencyCard\" />\r\n         </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n         <mat-form-field class=\"form__group\" *ngIf=\"fields['name']\">\r\n            <mat-label>Имя</mat-label>\r\n            <input matInput required formControlName=\"name\" />\r\n         </mat-form-field>\r\n         <mat-form-field class=\"form__group\" *ngIf=\"fields['surname']\">\r\n            <mat-label>Фамилия</mat-label>\r\n            <input matInput required formControlName=\"surname\" />\r\n         </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\" *ngIf=\"fields['phone']\">\r\n         <mat-form-field class=\"form__group\">\r\n            <mat-label>Номер телефона</mat-label>\r\n            <span matPrefix>+ &nbsp;</span>\r\n            <input type=\"tel\" matInput formControlName=\"phone\" required />\r\n         </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n         <mat-form-field class=\"form__group\" *ngIf=\"fields['email']\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput required formControlName=\"email\" />\r\n         </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n         <div class=\"buttons\">\r\n            <button mat-raised-button color=\"accent\" class=\"submit\">\r\n               Следующий шаг\r\n            </button>\r\n            <a routerLink=\"/\" class=\"link--back\">Изменить направление</a>\r\n         </div>\r\n         <div class=\"terms-of-use\">\r\n            <p class=\"text\">\r\n               Нажимая кнопку «Следующий шаг» вы подтверждаете свое согласие с\r\n            </p>\r\n\r\n            <a target=\"_blank\" routerLink=\"/terms-of-use\" class=\"link\"\r\n               >Правилами предоставления услуг сервиса EXWM</a\r\n            >\r\n         </div>\r\n      </div>\r\n   </form>\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, tap } from 'rxjs/operators';\r\nimport { Order } from '@models/order.model';\r\nimport * as fromRoot from '../../../../store/index';\r\nimport * as ProgressActions from '../../../../store/actions/progress.actions';\r\nimport * as OrderActions from '../../../../store/actions/order.actions';\r\n\r\n@Component({\r\n   selector: 'app-section-trade-third',\r\n   templateUrl: './section-trade-third.component.html',\r\n   styleUrls: ['./section-trade-third.component.scss'],\r\n})\r\nexport class SectionTradeThirdComponent implements OnInit {\r\n   order$: Observable<Order>;\r\n   timeLeft: number;\r\n   isCanceled = false;\r\n\r\n   private timer: any;\r\n\r\n   constructor(private store: Store<fromRoot.AppState>) {}\r\n\r\n   ngOnInit(): void {\r\n      this.store.dispatch(ProgressActions.setCurrentProcess({ payload: 3 }));\r\n      this.order$ = this.store.select(fromRoot.getOrder).pipe(\r\n         filter((order) => !!order),\r\n         tap((order) => {\r\n            if (order.status === 'canceled') {\r\n               this.isCanceled = true;\r\n               return;\r\n            }\r\n\r\n            const dueTime = new Date(order.date).getTime() + 15 * 60 * 1000;\r\n\r\n            if (!this.timer) {\r\n               this.timeLeft = dueTime - Date.now();\r\n               this.setTimer(dueTime);\r\n            }\r\n         })\r\n      );\r\n   }\r\n\r\n   onRefuse(): void {\r\n      this.store.dispatch(OrderActions.cancelOrderStart());\r\n   }\r\n\r\n   private setTimer(dueTime: number): void {\r\n      this.timer = setTimeout(() => {\r\n         this.timeLeft = dueTime - Date.now();\r\n\r\n         if (this.timeLeft <= 0) {\r\n            this.isCanceled = true;\r\n            return clearTimeout(this.timer);\r\n         }\r\n\r\n         this.setTimer(dueTime);\r\n      }, 1000);\r\n   }\r\n}\r\n","<ng-container *ngIf=\"order$ | async as order\">\r\n   <form\r\n      ngNoForm\r\n      accept-charset=\"utf-8\"\r\n      id=\"pay\"\r\n      name=\"pay\"\r\n      method=\"POST\"\r\n      action=\"https://merchant.webmoney.ru/lmi/payment.asp\"\r\n      accept-charset=\"windows-1251\"\r\n      *ngIf=\"order.merchant\"\r\n   >\r\n      <input type=\"hidden\" name=\"LMI_PAYMENT_AMOUNT\" value=\"12.08\" />\r\n      <input type=\"hidden\" name=\"LMI_PAYMENT_DESC\" value=\"платеж по счету\" />\r\n      <input type=\"hidden\" name=\"LMI_PAYMENT_NO\" value=\"1\" />\r\n      <input type=\"hidden\" name=\"LMI_PAYEE_PURSE\" value=\"Z534212467591\" />\r\n      <input type=\"hidden\" name=\"LMI_SIM_MODE\" value=\"0\" />\r\n      <input type=\"submit\" value=\"submit\" />\r\n   </form>\r\n\r\n   <section class=\"section-payment\" *ngIf=\"!isCanceled; else alternative\">\r\n      <h2 class=\"title\">\r\n         Ожидание оплаты по заявке № {{ order.number }} от\r\n         {{ order.date | date: 'dd.M.yyyy' }}\r\n      </h2>\r\n\r\n      <div class=\"content\">\r\n         <div class=\"left\">\r\n            <p class=\"text\">\r\n               Для успешного завершения обмена необходимо оплатить\r\n               <span class=\"highlight\"\r\n                  >{{ order.givenCurrencyAmount }}\r\n                  {{ order.givenCurrency.currencyCode }}</span\r\n               >\r\n            </p>\r\n\r\n            <p class=\"timer\">\r\n               Совершите перевод до окончания таймера\r\n               <span class=\"dark-bg\">\r\n                  {{ timeLeft | date: 'mm:ss' }}\r\n               </span>\r\n            </p>\r\n\r\n            <mat-divider></mat-divider>\r\n\r\n            <div class=\"details\">\r\n               <div class=\"top\">\r\n                  <p class=\"attention\">Внимание!</p>\r\n                  <p class=\"message\">\r\n                     Курс мог измениться. Обмен будет произведен:\r\n                  </p>\r\n\r\n                  <div class=\"info\">\r\n                     <p class=\"row\">\r\n                        <span class=\"color-grey\">По курсу</span>\r\n                        <span class=\"value\">\r\n                           <div>\r\n                              {{ order.givenCurrencyCourse }}\r\n                              {{ order.givenCurrency.currencyCode }} :\r\n                              {{ order.takenCurrencyCourse }}\r\n                              {{ order.takenCurrency.currencyCode }}\r\n                           </div>\r\n                        </span>\r\n                     </p>\r\n                     <p class=\"row\">\r\n                        <span class=\"color-grey\">Отдаете</span>\r\n                        <span class=\"value\">\r\n                           <div>\r\n                              {{ order.givenCurrencyAmount }}\r\n                              {{ order.givenCurrency.currencyCode }}\r\n                           </div>\r\n                           <div>\r\n                              {{ order.givenCurrency.name }}\r\n                              {{ order.givenCurrency.card }}\r\n                           </div>\r\n                        </span>\r\n                     </p>\r\n                     <p class=\"row\">\r\n                        <span class=\"color-grey\">Получаете</span>\r\n                        <span class=\"value\">\r\n                           <div>\r\n                              {{ order.takenCurrencyAmount }}\r\n                              {{ order.takenCurrency.currencyCode }}\r\n                           </div>\r\n                           <div>\r\n                              {{ order.takenCurrency.name }}\r\n                              {{ order.takenCurrency.card }}\r\n                           </div>\r\n                        </span>\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n\r\n               <div class=\"actions\">\r\n                  <button mat-raised-button color=\"primary\">Оплатить</button>\r\n                  <button mat-raised-button color=\"warn\" (click)=\"onRefuse()\">\r\n                     Отказаться\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         </div>\r\n         <div class=\"right\">\r\n            <app-section-third-message></app-section-third-message>\r\n         </div>\r\n      </div>\r\n   </section>\r\n\r\n   <ng-template #alternative>\r\n      <section class=\"section-canceled\">\r\n         <h2 class=\"title\">\r\n            Обмен оплаты по заявке № {{ order.number }} от\r\n            {{ order.date | date: 'dd.M.yyyy' }} отменен\r\n         </h2>\r\n\r\n         <p class=\"text\">\r\n            Если оплата была произведена после отмены операции, или сервис не\r\n            видит оплату по другим причинам, не переживайте, мы найдем ваш\r\n            платеж в ручном режиме.\r\n         </p>\r\n\r\n         <p class=\"text\">\r\n            Для обращения в службу поддержки создайте тикет в нашем хелп-дес.\r\n            Операторы обязательно ответят на ваше сообщение, найдут платеж и\r\n            завершат обмен.\r\n         </p>\r\n\r\n         <div class=\"actions\">\r\n            <button mat-raised-button color=\"primary\" routerLink=\"/\">\r\n               Новый обмен\r\n            </button>\r\n         </div>\r\n      </section>\r\n   </ng-template>\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n   selector: 'app-section-trade',\r\n   templateUrl: './section-trade.component.html',\r\n   styleUrls: ['./section-trade.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SectionTradeComponent implements OnInit {\r\n   constructor() {}\r\n\r\n   ngOnInit(): void {}\r\n}\r\n","<app-section-trade-progress></app-section-trade-progress>\r\n\r\n<div class=\"content\">\r\n   <router-outlet></router-outlet>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { SectionAboutComponent } from './components/section-about/section-about.component';\r\nimport { SectionRulesComponent } from './components/section-rules/section-rules.component';\r\nimport { SectionTariffsComponent } from './components/section-tariffs/section-tariffs.component';\r\nimport { SectionTradeFirstComponent } from './components/section-trade-first/section-trade-first.component';\r\nimport { SectionTradeSecondComponent } from './components/section-trade-second/section-trade-second.component';\r\nimport { SectionTradeThirdComponent } from './components/section-trade-third/section-trade-third.component';\r\nimport { SectionTradeComponent } from './components/section-trade/section-trade.component';\r\nimport { MoneybackPolicyComponent } from './components/moneyback-policy/moneyback-policy.component';\r\nimport { ExchangeResolver } from '@core/resolvers/exchange-resolver.service';\r\nimport { OrderResolver } from '@core/resolvers/order-resolver.service';\r\nimport { ActiveOrderGuard } from '@core/guards/active-order.guard';\r\n\r\nconst routes: Routes = [\r\n   {\r\n      path: '',\r\n      component: MainComponent,\r\n      children: [\r\n         {\r\n            path: '',\r\n            pathMatch: 'full',\r\n            redirectTo: 'exchanges',\r\n         },\r\n         {\r\n            path: 'exchanges',\r\n            component: SectionTradeComponent,\r\n            children: [\r\n               {\r\n                  path: '',\r\n                  pathMatch: 'full',\r\n                  component: SectionTradeFirstComponent,\r\n                  resolve: {\r\n                     exchanges: ExchangeResolver,\r\n                  },\r\n               },\r\n               {\r\n                  path: ':id',\r\n                  component: SectionTradeSecondComponent,\r\n                  resolve: {\r\n                     exchange: ExchangeResolver,\r\n                  },\r\n               },\r\n               {\r\n                  path: 'transaction/:id',\r\n                  component: SectionTradeThirdComponent,\r\n                  canActivate: [ActiveOrderGuard],\r\n                  resolve: {\r\n                     order: OrderResolver,\r\n                  },\r\n               },\r\n            ],\r\n         },\r\n         {\r\n            path: 'about',\r\n            component: SectionAboutComponent,\r\n         },\r\n         {\r\n            path: 'terms-of-use',\r\n            component: SectionRulesComponent,\r\n         },\r\n         {\r\n            path: 'tariffs',\r\n            component: SectionTariffsComponent,\r\n            resolve: {\r\n               exchanges: ExchangeResolver,\r\n            },\r\n         },\r\n         {\r\n            path: 'moneybackPolicy',\r\n            component: MoneybackPolicyComponent,\r\n         },\r\n      ],\r\n   },\r\n];\r\n\r\n@NgModule({\r\n   imports: [RouterModule.forChild(routes)],\r\n   exports: [RouterModule],\r\n})\r\nexport class MainRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from './../../shared/shared.module';\r\n\r\nimport { MainRoutingModule } from './main-routing.module';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { NavComponent } from './components/nav/nav.component';\r\nimport { SectionTradeComponent } from './components/section-trade/section-trade.component';\r\nimport { SectionTradeProgressComponent } from './components/section-trade-progress/section-trade-progress.component';\r\nimport { SectionTradeFirstComponent } from './components/section-trade-first/section-trade-first.component';\r\nimport { SectionAboutComponent } from './components/section-about/section-about.component';\r\nimport { SectionTradeSecondComponent } from './components/section-trade-second/section-trade-second.component';\r\nimport { SectionRulesComponent } from './components/section-rules/section-rules.component';\r\nimport { SectionTariffsComponent } from './components/section-tariffs/section-tariffs.component';\r\nimport { SectionTradeThirdComponent } from './components/section-trade-third/section-trade-third.component';\r\nimport { MoneybackPolicyComponent } from './components/moneyback-policy/moneyback-policy.component';\r\nimport { SectionThirdMessageComponent } from './components/section-third-message/section-third-message.component';\r\n\r\n@NgModule({\r\n   declarations: [MainComponent, HeaderComponent, FooterComponent, NavComponent, SectionTradeComponent, SectionTradeProgressComponent, SectionTradeFirstComponent, SectionAboutComponent, SectionTradeSecondComponent, SectionRulesComponent, SectionTariffsComponent, SectionTradeThirdComponent, MoneybackPolicyComponent, SectionThirdMessageComponent],\r\n   imports: [MainRoutingModule, SharedModule],\r\n})\r\nexport class MainModule {}\r\n"],"sourceRoot":"webpack:///"}